<?xml version="1.0"?>
<robot name="diff_drive_bot" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Include property and material files -->
  <xacro:include filename="$(find four_wheel_bot_pkg)/urdf/properties.xacro"/>
  <xacro:include filename="$(find four_wheel_bot_pkg)/urdf/materials.xacro"/>

  <!-- Base link (chassis) -->
  <link name="base_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="${chassis_mass}"/>
      <xacro:box_inertia m="${chassis_mass}" l="${chassis_length}" w="${chassis_width}" h="${chassis_height}"/>
    </inertial>
  </link>

  <!-- Wheel macro for differential drive -->
  <xacro:macro name="wheel" params="wheel_name x_offset y_offset">
    <link name="${wheel_name}">
      <visual>
        <origin xyz="0 0 0" rpy="1.5708 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="1.5708 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
      </collision>
      <inertial>
        <origin xyz="0 0 0" rpy="1.5708 0 0"/>
        <mass value="${wheel_mass}"/>
        <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_thickness}"/>
      </inertial>
    </link>

    <joint name="${wheel_name}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${wheel_name}"/>
      <origin xyz="${x_offset} ${y_offset} ${wheel_offset_z}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <!-- Create wheels -->
  <xacro:wheel wheel_name="front_left_wheel" x_offset="${wheel_offset_x_front}" y_offset="${wheel_offset_y}"/>
  <xacro:wheel wheel_name="front_right_wheel" x_offset="${wheel_offset_x_front}" y_offset="-${wheel_offset_y}"/>
  <xacro:wheel wheel_name="rear_left_wheel" x_offset="${wheel_offset_x_rear}" y_offset="${wheel_offset_y}"/>
  <xacro:wheel wheel_name="rear_right_wheel" x_offset="${wheel_offset_x_rear}" y_offset="-${wheel_offset_y}"/>

  <!-- Gazebo plugins for differential drive -->
  <gazebo>
    <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
      <left_joint>front_left_wheel_joint</left_joint>
      <left_joint>rear_left_wheel_joint</left_joint>
      <right_joint>front_right_wheel_joint</right_joint>
      <right_joint>rear_right_wheel_joint</right_joint>
      <wheel_separation>${2*wheel_offset_y}</wheel_separation>
      <wheel_radius>${wheel_radius}</wheel_radius>
      <odom_publish_frequency>50</odom_publish_frequency>
      <topic>cmd_vel</topic>
      <odom_topic>odom</odom_topic>
      <frame_id>odom</frame_id>
      <child_frame_id>base_link</child_frame_id>
    </plugin>
  </gazebo>

  <!-- Joint state publisher plugin -->
  <gazebo>
    <plugin filename="gz-sim-joint-state-publisher-system" name="gz::sim::systems::JointStatePublisher">
    </plugin>
  </gazebo>

  <!-- Gazebo materials -->
  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
  </gazebo>

  <gazebo reference="front_left_wheel">
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <gazebo reference="front_right_wheel">
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <gazebo reference="rear_left_wheel">
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <gazebo reference="rear_right_wheel">
    <material>Gazebo/DarkGrey</material>
  </gazebo>

</robot>
